- name: Stop Ec2 instance with tag filters
  ec2_instance_info:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    filters:
      "tag:app": "{{ tag_value }}"
  register: ec2_jenkins  

- name: disassociate an elastic IP with a device
  ec2_eip:
    device_id: '{{ item.instance_id }}'
    ip: '{{ item.public_ip_address }}'
    release_on_disassociation: no
    state: absent
  when: item.public_ip_address is defined
  with_items: "{{ ec2_jenkins.instances }}"   

- name: Kill EC2 Instance
  ec2:
    instance_ids: "{{ ec2_jenkins.instances[0].instance_id }}"
    state: absent
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"  
    wait: yes

- name: Get VPC for Jenkins
  ec2_vpc_net:
    state: present
    region: "{{ aws_region }}"
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    dns_hostnames: yes
    dns_support: yes
    multi_ok: no
    tenancy: default
    profile: "{{ aws_profile }}"
    tags:
      Name: "jenkins"
  register: jenkins_vpc

- name: Delete Internet Gateway
  ec2_vpc_igw:
    state: absent
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ jenkins_vpc.vpc.id }}"
    tags:
      Name: "jenkins"
  register: jenkins_igw

- name: Delete subnets
  ec2_vpc_subnet:
    state: absent
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ jenkins_vpc.vpc.id }}"
    cidr: "{{ item.value.cidr }}"
    tags:
      Name: "jenkins_{{ item.value.az }}"
  with_dict: "{{ vpc_subnets }}"
  register: jenkins_vpc_subnets

- name: "Delete vpc security groups"
  ec2_group:
    state: absent
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ jenkins_vpc.vpc.id }}"
    name: "jenkins_sg_{{ jenkins_vpc.vpc.id }}"
    description: "jenkins security group for {{ jenkins_vpc.vpc.id }}"
  register: jenkins_sg

- name: Delete VPC for Jenkins
  ec2_vpc_net:
    state: absent
    region: "{{ aws_region }}"
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    dns_hostnames: yes
    dns_support: yes
    multi_ok: no
    tenancy: default
    profile: "{{ aws_profile }}"
    tags:
      Name: "jenkins"
  register: jenkins_vpc    

   
