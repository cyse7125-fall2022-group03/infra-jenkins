- name: Upgrading Software
  ansible.builtin.expect:
    command: sudo ufw allow OpenSSH
    responses:
      'Command may disrupt existing ssh connections. Proceed with operation (y|n)?': 'y'

- name: Upgrading Software
  ansible.builtin.expect:
    command: sudo ufw enable
    responses:
      'Command may disrupt existing ssh connections. Proceed with operation (y|n)?': 'y'

- name: Upgrading Software
  ansible.builtin.expect:
    command: sudo ufw allow 'Nginx Full'
    responses:
      'Command may disrupt existing ssh connections. Proceed with operation (y|n)?': 'y'

- name: Upgrading Software
  ansible.builtin.expect:
    command: sudo ufw allow ssh
    responses:
      'Command may disrupt existing ssh connections. Proceed with operation (y|n)?': 'y'

- name: Delete default nginx site
  ansible.builtin.file:
    path: /etc/nginx/sites-available/default
    state: absent
  become: true

# - name: Copy nginx site.conf
#   ansible.builtin.template:
#     src: site.conf.j2
#     dest: /etc/nginx/sites-available/default
#     owner: root
#     group: root
#     mode: '0644'
#   become: true

- name: set up nginx custom configuration block
  blockinfile:
    path:  /etc/nginx/sites-available/default
    create: yes
    block: |
      upstream jenkins {
        server 127.0.0.1:8080 fail_timeout=0;
      }
      server {
              listen 80 default_server;
              listen [::]:80 default_server;
              root /var/www/html;
              index index.html index.htm index.nginx-debian.html;
              server_name "{{ domain_name }}";
              location / {
                      proxy_set_header        Host $host:$server_port;
                      proxy_set_header        X-Real-IP $remote_addr;
                      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                      proxy_set_header        X-Forwarded-Proto $scheme;
                      proxy_set_header        Upgrade $http_upgrade;
                      proxy_set_header        Connection "upgrade";
                      proxy_pass              http://jenkins;
              }
      }
  become: true  

- name: Set up nginx files
  command: sudo nginx -t

- name: Reload Nginx
  ansible.builtin.service:
    name: nginx
    state: reloaded
  become: true

- name: Use Certbot to generate certificates
  ansible.builtin.command: certbot --nginx -n -d "{{ domain_name }}" --email "{{ email_id }}" --agree-tos --redirect -v
  become: true
  changed_when: false


- name: Ensure repository key is installed for docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: true

- name: Ensure Docker Registry is available
  apt_repository: repo='deb https://download.docker.com/linux/ubuntu bionic stable' state=present
  become: true

- name: Ensure Docker and Dependencies are installed
  apt: name=docker-ce update_cache=yes
  become: true

- name: To provide necessary permissions to communicate to docker socket
  file:
    dest: /var/run/docker.sock
    owner: root
    group: root
    mode: 0666
  become: true

- name: Install kubectl
  shell: |
    apt-get update && apt-get install -y apt-transport-https 
    curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
    apt-get update
    apt-get install -y kubectl
  become: true

- name: Install kops
  shell: |
    wget -O kops https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
    chmod +x ./kops
    mv ./kops /usr/local/bin/ 
  become: true  


  
