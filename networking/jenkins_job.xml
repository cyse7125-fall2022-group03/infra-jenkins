pipeline{
    agent any                           
    environment{                          
        GITHUB_TOKEN = credentials('GITHUB_TOKEN')
        DOCK_PASS = credentials('DOCKER_PASSWORD')
        DOCK_UNAME = credentials('DOCK_UNAME')
        FLYWAY_URL = credentials('FLYWAY_URL')
        RDS_URL = credentials('RDS_URL')
        GITHUB_TOKEN = credentials('GITHUB_TOKEN')
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION = credentials('AWS_DEFAULT_REGION')
        KOPS_STATE_STORE = credentials('KOPS_STATE_STORE')

        CLUSTER_NAME = credentials('CLUSTER_NAME')
        SERVICEACC_NAME = credentials('SERVICEACC_NAME')
        
    }        
    stages{
        
        stage('Clone') {
            steps{
                
                git branch: 'main', credentialsId: 'jenkinsCreatedCred', url: "https://${GITHUB_TOKEN}@github.com/cyse7125-fall2022-group03/webapp.git"
                
                script {
                    git_hash = sh(returnStdout: true, script: "git rev-parse HEAD").trim()
                }
                
                

            }
        }   
        
    
        stage('compile') {
                steps {  
                    withMaven{
                        sh "./mvnw clean"
                        sh "./mvnw package"
                    }
                }
        }
        
        
        stage('Build docker Image') {
            steps {
                sh"""
                    docker build -t csye7125fall2022group03/dockrepo:"${git_hash}" .
                    """
                }
        }

        stage('Login docker') {
            steps {
                    sh 'docker login -u ${DOCK_UNAME} -p ${DOCK_PASS}'
                }
        }



        stage('Push') {
            steps {
                    sh """
                    docker push csye7125fall2022group03/dockrepo:"${git_hash}"
                    """
                }
        }
        
        
        stage('Clone repository'){    

            steps {
            git branch: 'main', credentialsId: 'jenkinsCreatedCred', url: "https://${GITHUB_TOKEN}@github.com/cyse7125-fall2022-group03/helm-chart.git"
            }
        }
    
        stage ('Deploy') {
    
            steps {                
            sh "export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
            sh "export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
            sh "export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}"
            sh "export KOPS_STATE_STORE=${KOPS_STATE_STORE}"
            sh "kops export kubecfg ${CLUSTER_NAME} --state ${KOPS_STATE_STORE} --${SERVICEACC_NAME}"
            sh "helm upgrade --install --wait --set configmap.dbHost=${RDS_URL},flyway.url=${FLYWAY_URL},image.tag=${git_hash} app ./app"
            }
    }

}

        
}                
